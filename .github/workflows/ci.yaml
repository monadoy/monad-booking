name: CI

on: 
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      deploy_staging:
        description: 'Deploy to staging'
      deploy_production:
        description: 'Deploy to production'

jobs:
  build-firmware:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Set up Python with cache
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Python requirements
        run: pip install -r ./scripts/requirements.txt

      - name: Build the firmware
        run: pio run -e m5paper

      - name: Store firmware artifact
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: .pio/build/m5paper/firmware.bin

  build-file-system:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python with cache
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Python requirements
        run: pip install -r ./scripts/requirements.txt

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          cache-dependency-path: webPortalFrontend/package-lock.json

      - name: Build frontend
        run: python ./scripts/setup.py frontend

      - name: Store file system artifact
        uses: actions/upload-artifact@v3
        with:
          name: file-system
          path: data
          
  deploy-staging:
    runs-on: ubuntu-22.04
    needs: [build-firmware, build-file-system]
    if: github.ref == 'refs/heads/master' || github.event.inputs.deploy_staging == 'true'
    environment: staging
    steps:
      - name: Deploy
        run: echo Deploying ${{ github.run_id }} to Staging

  deploy-production:
    runs-on: ubuntu-22.04
    needs: [deploy-staging, build-firmware, build-file-system]
    if: github.ref == 'refs/heads/master' || github.event.inputs.deploy_production == 'true'
    environment: staging
    steps:
      - name: Deploy
        run: echo Deploying ${{ github.run_id }} to Production